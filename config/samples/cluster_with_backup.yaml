# This file provides an example of a cluster with backup agents running
# alongside the cluster.
#
# Once the cluster and the backup agents are up, you can start a backup by
# opening a shell in one of the backup_agent pods and running the
# fdbbackup commands command. Examples:
#
#     # Start a Backup:
#     kubectl exec deployment/sample-cluster-backup-agents -- fdbbackup start -d "blobstore://minio@minio-service:9000/sample-cluster-test-backup?sc=0&bucket=fdb-backups" -z
#     # Check Status
#     kubectl exec deployment/sample-cluster-backup-agents -- fdbbackup status
#
# This example uses configuration for a local MinIO instance, which is set up as
# part of the local testing environment for the operator. This instance has
# TLS disabled, and credentials that are hardcoded in the YAML. This
# configuration is for testing purposes only. You will need to determine the
# appropriate way of managing TLS and credentials for your real environment and
# endpoints, as well as the appropriate backup solution to use. We use MinIO in
# our local tests due to its lightweight setup, but you can backup to any
# S3-compatible object storage service.
#
# If you are testing this in Docker Desktop, you can browse the local MinIO
# instance at http://localhost:9000.
apiVersion: apps.foundationdb.org/v1beta1
kind: FoundationDBCluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: sample-cluster
spec:
  version: 6.2.15
  volumeClaim:
    spec:
      resources:
        requests:
          storage: "16G"
  faultDomain:
    key: foundationdb.org/none
  processCounts:
    stateless: -1
  customParameters:
    - "knob_disable_posix_kernel_aio=1"
  podTemplate:
    spec:
      securityContext:
        fsGroup: 0
      containers:
        - name: foundationdb
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: 250m
              memory: 128Mi
        - name: foundationdb-kubernetes-sidecar
          securityContext:
            runAsUser: 0
      initContainers:
        - name: foundationdb-kubernetes-init
          securityContext:
            runAsUser: 0
---
apiVersion: v1
kind: Secret
metadata:
  name: sample-cluster-backup-secrets
type: Opaque
stringData:
  credentials: |
    {
      "accounts": {
        "minio@minio-service": {
          "secret" : "minio123"
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sample-cluster-backup-agents
spec:
  replicas: 2
  selector:
    matchLabels:
      app: sample-cluster-backup-agents
  template:
    metadata:
      labels:
        app: sample-cluster-backup-agents
      name: sample-cluster-backup-agents
    spec:
      automountServiceAccountToken: false
      containers:
        - name: foundationdb
          image: foundationdb/foundationdb:6.2.11
          args:
            - --log
            - --logdir
            - /var/log/fdb-trace-logs
          command:
            - backup_agent
          env:
            - name: FDB_CLUSTER_FILE
              value: /var/dynamic-conf/fdb.cluster
            - name: FDB_BLOB_CREDENTIALS
              value: /var/secrets/credentials
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - name: logs
              mountPath: /var/log/fdb-trace-logs
            - name: dynamic-conf
              mountPath: /var/dynamic-conf
            - name: secrets
              mountPath: /var/secrets
      volumes:
        - name: secrets
          secret:
            secretName: sample-cluster-backup-secrets
        - name: dynamic-conf
          configMap:
            name: sample-cluster-config
            items:
              - key: cluster-file
                path: fdb.cluster
        - name: logs
          emptyDir: {}
