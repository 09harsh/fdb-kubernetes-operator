# This file provides an example of a cluster with a backup running.
#
# The backup resource will bring up backup agents and start a backup. Once it
# is reconciled, you can run backup commands from the backup agent containers:
#
#     # Check Status
#     kubectl exec deployment/sample-cluster-backup-agents -- fdbbackup status
#
# This example uses configuration for a local MinIO instance, which is set up as
# part of the local testing environment for the operator. This instance has
# TLS disabled, and credentials that are hardcoded in the YAML. This
# configuration is for testing purposes only. You will need to determine the
# appropriate way of managing TLS and credentials for your real environment and
# endpoints, as well as the appropriate backup solution to use. We use MinIO in
# our local tests due to its lightweight setup, but you can backup to any
# S3-compatible object storage service.
#
# If you are testing this in Docker Desktop, you can browse the local MinIO
# instance at http://localhost:9000.
#
# If you create all of the resources in one command, you may see the backup
# agents get caught in a crash loop because they are trying to use the original,
# invalid cluster file. You can resolve this by running
# `kubectl delete pod -l foundationdb.org/deployment-name=sample-cluster-backup-agents`
# to bounce the backup pods and get the correct cluster file. Once they are
# connected they will automatically get cluster file updates from the cluster.
apiVersion: apps.foundationdb.org/v1beta1
kind: FoundationDBCluster
metadata:
  labels:
    controller-tools.k8s.io: "1.0"
  name: sample-cluster
spec:
  version: 6.2.15
  volumeClaim:
    spec:
      resources:
        requests:
          storage: "16G"
  faultDomain:
    key: foundationdb.org/none
  processCounts:
    stateless: -1
  customParameters:
    - "knob_disable_posix_kernel_aio=1"
  podTemplate:
    spec:
      securityContext:
        fsGroup: 0
      containers:
        - name: foundationdb
          securityContext:
            runAsUser: 0
          resources:
            requests:
              cpu: 250m
              memory: 128Mi
        - name: foundationdb-kubernetes-sidecar
          securityContext:
            runAsUser: 0
      initContainers:
        - name: foundationdb-kubernetes-init
          securityContext:
            runAsUser: 0
---
apiVersion: apps.foundationdb.org/v1beta1
kind: FoundationDBBackup
metadata:
  name: sample-cluster
spec:
  version: 6.2.15
  clusterName: sample-cluster
  accountName: minio@minio-service
  podTemplateSpec:
    spec:
      containers:
        - name: foundationdb
          env:
            - name: FDB_BLOB_CREDENTIALS
              value: /var/secrets/credentials
          resources:
            limits:
              cpu: 250m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 128Mi
          securityContext:
            runAsGroup: 0
            runAsUser: 0
          volumeMounts:
            - name: secrets
              mountPath: /var/secrets
      volumes:
        - name: secrets
          secret:
            secretName: sample-cluster-backup-secrets
---
apiVersion: v1
kind: Secret
metadata:
  name: sample-cluster-backup-secrets
type: Opaque
stringData:
  credentials: |
    {
      "accounts": {
        "minio@minio-service": {
          "secret" : "minio123"
        }
      }
    }
